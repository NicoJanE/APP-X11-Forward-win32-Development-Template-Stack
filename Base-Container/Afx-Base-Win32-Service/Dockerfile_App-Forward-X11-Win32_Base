# This file is part of: App-X11-Forward-win32-Development-Template-Stack
# Copyright (c) 2024 Nico Jan Eelhart
#
# This source code is licensed under the MIT License found in the  'LICENSE.md' file in the root directory of this source tree.
#

# GOAL
# Running a WIn32 GUI application inside a Docker container on a Windows host using Docker Desktop 
# with WSL2 and X11 forwarding allow you to run Linux containers while forwarding the GUI to your Windows host.
# 
# 	BEFORE executing the compose Docker command make sure you have read 'howto_create_a_dev_container.md' in the Howtos folder TEMP:  gdb-doc gdbserver, ninja      


# Use an Ubuntu base image
FROM ubuntu:24.04

# For GUI forwarding
ENV DISPLAY=host.docker.internal:0
ENV CC=x86_64-w64-mingw32-gcc
ENV CXX=x86_64-w64-mingw32-g++

# Install necessary packages for X11 and  to build .win32
# gprof. 'binutils' contains 'gprof' (supports cross compiling MinGW) 'build-essential' contains: 'binutils'
# gdb-mingw-w64-target contains 32 and 64 wine gdbserver for debugging
RUN apt-get update && apt-get install -y \
    mingw-w64 \
	gdb-mingw-w64-target \
    cmake \
    gdb \
    cppcheck \
    curl \
    nano \
    x11-apps \
    build-essential \
    git \
    scite \
    net-tools \
    && rm -rf /var/lib/apt/lists/*

# install the Win32 and win64 executable layers and tools so we run Windows programs with 'wine' and debug them
RUN dpkg --add-architecture i386
RUN apt-get update && apt-get install -y \
    wine64 wine32 


# fix wine64
RUN ln -s /usr/lib/wine/wine64 /usr/bin/wine64

# Set the WINEPATH needed to locate Windows DLL files,  32 Bits     ;       64bits
ENV WINEPATH="/usr/lib/gcc/i686-w64-mingw32/13-win32;/usr/lib/gcc/x86_64-w64-mingw32/13-win32"


# Expose necessary ports if required (e.g., for debugging or network services)
EXPOSE 8080

# Set the default shell to bash
SHELL ["/bin/bash", "-c"]


# Command to keep the container running
CMD ["bash"]

